{"ast":null,"code":"import React,{useContext,useState,useEffect}from'react';import{AuthContext}from'../../AuthContext';import axios from'axios';import'../../css/userInfo.css';// CSS 모듈 임포트\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const UserInfo=()=>{const{sessionUserName}=useContext(AuthContext);const[subscriptions,setSubscriptions]=useState([]);const[subscriptionName,setSubscriptionName]=useState('');const SERVER_URL='http://localhost:8080';useEffect(()=>{// 구독 정보를 불러오는 API 호출\naxios.get(\"\".concat(SERVER_URL,\"/subscriptions\")).then(response=>{setSubscriptions(response.data);}).catch(error=>console.error('구독 정보를 불러오는 데 실패했습니다.',error));},[]);const handleSubscribe=e=>{e.preventDefault();// 구독 추가 API 호출\naxios.post(\"\".concat(SERVER_URL,\"/subscribe\"),{value:subscriptionName}).then(response=>{console.log('구독이 성공적으로 추가되었습니다.',response.data);setSubscriptionName('');const newSubscription=response.data;setSubscriptions([...subscriptions,newSubscription]);}).catch(error=>{console.error('구독 추가에 실패했습니다.',error);});};const handleUnsubscribe=subscriptionId=>{axios.delete(\"\".concat(SERVER_URL,\"/unsubscribe/\").concat(subscriptionId)).then(()=>{// 성공적으로 삭제된 후 구독 목록 업데이트\nsetSubscriptions(subscriptions.filter(subscription=>subscription.id!==subscriptionId));}).catch(error=>console.error('구독 취소 실패',error));};return/*#__PURE__*/_jsxs(\"div\",{className:\"userInfoContainer\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"userInfoTitle\",children:\"\\uC720\\uC800 \\uC815\\uBCF4\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"userName\",children:[\"\\uC774\\uB984: \",/*#__PURE__*/_jsx(\"strong\",{children:sessionUserName})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"subscriptionInfoTitle\",children:\"\\uD0A4\\uC6CC\\uB4DC \\uAD6C\\uB3C5\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubscribe,className:\"subscriptionForm\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"subscriptionName\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"subscriptionName\",className:\"subscriptionInput\",value:subscriptionName,onChange:e=>setSubscriptionName(e.target.value),required:true,placeholder:\"\\uD0A4\\uC6CC\\uB4DC\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"subscribeButton\",children:\"\\uAD6C\\uB3C5 \\uCD94\\uAC00\"})]}),subscriptions.map(subscription=>/*#__PURE__*/_jsxs(\"div\",{className:\"subscriptionItem\",children:[subscription.value,/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleUnsubscribe(subscription.id),className:\"unsubscribeButton\",children:\"X\"})]},subscription.id))]})]});};export default UserInfo;","map":{"version":3,"names":["React","useContext","useState","useEffect","AuthContext","axios","jsx","_jsx","jsxs","_jsxs","UserInfo","sessionUserName","subscriptions","setSubscriptions","subscriptionName","setSubscriptionName","SERVER_URL","get","concat","then","response","data","catch","error","console","handleSubscribe","e","preventDefault","post","value","log","newSubscription","handleUnsubscribe","subscriptionId","delete","filter","subscription","id","className","children","onSubmit","htmlFor","type","onChange","target","required","placeholder","map","onClick"],"sources":["/Users/macheewon/Documents/GitHub/aws-winter-yonsei/src/main/frontend/react/src/pages/user/userInfo.jsx"],"sourcesContent":["\nimport React, { useContext, useState, useEffect } from 'react';\nimport { AuthContext } from '../../AuthContext';\nimport axios from 'axios';\nimport '../../css/userInfo.css'; // CSS 모듈 임포트\n\nconst UserInfo = () => {\n    const { sessionUserName } = useContext(AuthContext);\n    const [subscriptions, setSubscriptions] = useState([]);\n    const [subscriptionName, setSubscriptionName] = useState('');\n\n    const SERVER_URL = 'http://localhost:8080';\n\n    useEffect(() => {\n        // 구독 정보를 불러오는 API 호출\n        axios.get(`${SERVER_URL}/subscriptions`)\n            .then(response => {\n                setSubscriptions(response.data);\n            })\n            .catch(error => console.error('구독 정보를 불러오는 데 실패했습니다.', error));\n    }, []);\n\n    const handleSubscribe = (e) => {\n        e.preventDefault();\n        // 구독 추가 API 호출\n        axios.post(`${SERVER_URL}/subscribe`, { value: subscriptionName })\n            .then(response => {\n                console.log('구독이 성공적으로 추가되었습니다.', response.data);\n                setSubscriptionName('');\n                const newSubscription = response.data;\n                setSubscriptions([...subscriptions, newSubscription]);\n            })\n            .catch(error => {\n                console.error('구독 추가에 실패했습니다.', error);\n            });\n    };\n    const handleUnsubscribe = (subscriptionId) => {\n        axios.delete(`${SERVER_URL}/unsubscribe/${subscriptionId}`)\n            .then(() => {\n                // 성공적으로 삭제된 후 구독 목록 업데이트\n                setSubscriptions(subscriptions.filter(subscription => subscription.id !== subscriptionId));\n            })\n            .catch(error => console.error('구독 취소 실패', error));\n    };\n\n    return (\n        <div className=\"userInfoContainer\">\n            <h2 className=\"userInfoTitle\">유저 정보</h2>\n            <p className=\"userName\">이름: <strong>{sessionUserName}</strong></p>\n            <div>\n                <h3 className=\"subscriptionInfoTitle\">키워드 구독</h3>\n                <form onSubmit={handleSubscribe} className=\"subscriptionForm\">\n                    <label htmlFor=\"subscriptionName\"></label>\n                    <input\n                        type=\"text\"\n                        id=\"subscriptionName\"\n                        className=\"subscriptionInput\"\n                        value={subscriptionName}\n                        onChange={(e) => setSubscriptionName(e.target.value)}\n                        required\n                        placeholder=\"키워드를 입력해주세요\"\n                    />\n                    <button type=\"submit\" className=\"subscribeButton\">구독 추가</button>\n                </form>\n                {subscriptions.map(subscription => (\n                    <div key={subscription.id} className=\"subscriptionItem\">\n                        {subscription.value}\n                        <button onClick={() => handleUnsubscribe(subscription.id)}\n                                className=\"unsubscribeButton\">X\n                        </button>\n                    </div>\n                ))}\n            </div>\n        </div>\n\n    );\n};\n\nexport default UserInfo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}