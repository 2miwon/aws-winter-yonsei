{"ast":null,"code":"var _jsxFileName = \"/Users/macheewon/Documents/GitHub/aws-winter-yonsei/src/main/frontend/react/src/pages/user/userInfo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\nimport { AuthContext } from '../../AuthContext';\nimport axios from 'axios';\nimport '../../css/userInfo.css'; // CSS 모듈 임포트\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserInfo = () => {\n  _s();\n  const {\n    sessionUserName\n  } = useContext(AuthContext);\n  const [subscriptions, setSubscriptions] = useState([]);\n  const [subscriptionName, setSubscriptionName] = useState('');\n  const SERVER_URL = 'http://localhost:8080';\n  useEffect(() => {\n    // 구독 정보를 불러오는 API 호출\n    axios.get(`${SERVER_URL}/subscriptions`).then(response => {\n      setSubscriptions(response.data);\n    }).catch(error => console.error('구독 정보를 불러오는 데 실패했습니다.', error));\n  }, []);\n  const handleSubscribe = e => {\n    e.preventDefault();\n    // 구독 추가 API 호출\n    axios.post(`${SERVER_URL}/subscribe`, {\n      value: subscriptionName\n    }).then(response => {\n      console.log('구독이 성공적으로 추가되었습니다.', response.data);\n      setSubscriptionName('');\n      const newSubscription = response.data;\n      setSubscriptions([...subscriptions, newSubscription]);\n    }).catch(error => {\n      console.error('구독 추가에 실패했습니다.', error);\n    });\n  };\n  const handleUnsubscribe = subscriptionId => {\n    axios.delete(`${SERVER_URL}/unsubscribe/${subscriptionId}`).then(() => {\n      // 성공적으로 삭제된 후 구독 목록 업데이트\n      setSubscriptions(subscriptions.filter(subscription => subscription.id !== subscriptionId));\n    }).catch(error => console.error('구독 취소 실패', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"userInfoContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"userInfoTitle\",\n      children: \"\\uC720\\uC800 \\uC815\\uBCF4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"userName\",\n      children: [\"\\uC774\\uB984: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: sessionUserName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"subscriptionInfoTitle\",\n        children: \"\\uD0A4\\uC6CC\\uB4DC \\uAD6C\\uB3C5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubscribe,\n        className: \"subscriptionForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"subscriptionName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"subscriptionName\",\n          className: \"subscriptionInput\",\n          value: subscriptionName,\n          onChange: e => setSubscriptionName(e.target.value),\n          required: true,\n          placeholder: \"\\uD0A4\\uC6CC\\uB4DC\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"subscribeButton\",\n          children: \"\\uAD6C\\uB3C5 \\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), subscriptions.map(subscription => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subscriptionItem\",\n        children: [subscription.value, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUnsubscribe(subscription.id),\n          className: \"unsubscribeButton\",\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)]\n      }, subscription.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(UserInfo, \"EwslbMtY91li6fvP8zPeycnSzJs=\");\n_c = UserInfo;\nexport default UserInfo;\nvar _c;\n$RefreshReg$(_c, \"UserInfo\");","map":{"version":3,"names":["React","useContext","useState","useEffect","AuthContext","axios","jsxDEV","_jsxDEV","UserInfo","_s","sessionUserName","subscriptions","setSubscriptions","subscriptionName","setSubscriptionName","SERVER_URL","get","then","response","data","catch","error","console","handleSubscribe","e","preventDefault","post","value","log","newSubscription","handleUnsubscribe","subscriptionId","delete","filter","subscription","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","onChange","target","required","placeholder","map","onClick","_c","$RefreshReg$"],"sources":["/Users/macheewon/Documents/GitHub/aws-winter-yonsei/src/main/frontend/react/src/pages/user/userInfo.jsx"],"sourcesContent":["\nimport React, { useContext, useState, useEffect } from 'react';\nimport { AuthContext } from '../../AuthContext';\nimport axios from 'axios';\nimport '../../css/userInfo.css'; // CSS 모듈 임포트\n\nconst UserInfo = () => {\n    const { sessionUserName } = useContext(AuthContext);\n    const [subscriptions, setSubscriptions] = useState([]);\n    const [subscriptionName, setSubscriptionName] = useState('');\n\n    const SERVER_URL = 'http://localhost:8080';\n\n    useEffect(() => {\n        // 구독 정보를 불러오는 API 호출\n        axios.get(`${SERVER_URL}/subscriptions`)\n            .then(response => {\n                setSubscriptions(response.data);\n            })\n            .catch(error => console.error('구독 정보를 불러오는 데 실패했습니다.', error));\n    }, []);\n\n    const handleSubscribe = (e) => {\n        e.preventDefault();\n        // 구독 추가 API 호출\n        axios.post(`${SERVER_URL}/subscribe`, { value: subscriptionName })\n            .then(response => {\n                console.log('구독이 성공적으로 추가되었습니다.', response.data);\n                setSubscriptionName('');\n                const newSubscription = response.data;\n                setSubscriptions([...subscriptions, newSubscription]);\n            })\n            .catch(error => {\n                console.error('구독 추가에 실패했습니다.', error);\n            });\n    };\n    const handleUnsubscribe = (subscriptionId) => {\n        axios.delete(`${SERVER_URL}/unsubscribe/${subscriptionId}`)\n            .then(() => {\n                // 성공적으로 삭제된 후 구독 목록 업데이트\n                setSubscriptions(subscriptions.filter(subscription => subscription.id !== subscriptionId));\n            })\n            .catch(error => console.error('구독 취소 실패', error));\n    };\n\n    return (\n        <div className=\"userInfoContainer\">\n            <h2 className=\"userInfoTitle\">유저 정보</h2>\n            <p className=\"userName\">이름: <strong>{sessionUserName}</strong></p>\n            <div>\n                <h3 className=\"subscriptionInfoTitle\">키워드 구독</h3>\n                <form onSubmit={handleSubscribe} className=\"subscriptionForm\">\n                    <label htmlFor=\"subscriptionName\"></label>\n                    <input\n                        type=\"text\"\n                        id=\"subscriptionName\"\n                        className=\"subscriptionInput\"\n                        value={subscriptionName}\n                        onChange={(e) => setSubscriptionName(e.target.value)}\n                        required\n                        placeholder=\"키워드를 입력해주세요\"\n                    />\n                    <button type=\"submit\" className=\"subscribeButton\">구독 추가</button>\n                </form>\n                {subscriptions.map(subscription => (\n                    <div key={subscription.id} className=\"subscriptionItem\">\n                        {subscription.value}\n                        <button onClick={() => handleUnsubscribe(subscription.id)}\n                                className=\"unsubscribeButton\">X\n                        </button>\n                    </div>\n                ))}\n            </div>\n        </div>\n\n    );\n};\n\nexport default UserInfo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}