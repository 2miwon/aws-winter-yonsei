{"ast":null,"code":"import React,{useEffect,useRef,useState}from\"react\";import{useParams}from\"react-router-dom\";import WebViewer from\"@pdftron/webviewer\";import axios from\"axios\";import'../../css/detailPage.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const DetailPage=()=>{const{id}=useParams();const idx=parseInt(id);const viewer=useRef(null);const[bill,setBill]=useState({id:idx,name:'',proposer:'',date:''});const[content,setContent]=useState();useEffect(()=>{const fetchBillDetails=async()=>{try{const response=await axios.get(\"https://open.assembly.go.kr/portal/openapi/TVBPMBILL11?TYPE=json&BILL_NO=\".concat(idx));const data=response.data.TVBPMBILL11[1].row[0];setBill({...bill,name:data.BILL_NAME,proposer:data.PROPOSER,date:data.PROPOSE_DT});}catch(error){console.error('법안 정보를 불러오는 데 실패했습니다.',error);}};const fetchPdf=async()=>{try{const rectangleWidth=window.innerWidth*0.8;const rectangleHeight=window.innerHeight*0.2;WebViewer({path:\"/webviewer/lib/public\",licenseKey:\"demo:1707201620106:7f4eafe9030000000069fe03ee7211c47e235a224e21040bb60f132600\",initialDoc:\"http://52.78.206.96:5000/file/\".concat(idx)},viewer.current).then(instance=>{const{documentViewer,annotationManager,Annotations}=instance.Core;documentViewer.addEventListener(\"documentLoaded\",()=>{const rectangleAnnot=new Annotations.RectangleAnnotation({PageNumber:1,X:0,Y:0,Width:rectangleWidth,Height:rectangleHeight,Author:annotationManager.getCurrentUser()});annotationManager.addAnnotation(rectangleAnnot);annotationManager.redrawAnnotation(rectangleAnnot);});});}catch(error){console.error(\"Failed to fetch PDF URL:\",error);}};fetchBillDetails();fetchPdf();},[idx]);const[isLoading,setIsLoading]=useState(false);const fetchSummary=async()=>{setIsLoading(true);try{const response=await axios.post(\"http://localhost:8080/gpt/\".concat(idx,\"/summary\"));setContent(response.data);setIsLoading(false);}catch(error){console.error('요약 내용을 불러오는 데 실패했습니다.',error);setIsLoading(false);}};const renderContentWithBreaks=content=>{return content.split(/(?=\\d\\.)/).map((paragraph,index)=>/*#__PURE__*/_jsx(\"p\",{className:\"summary-text\",children:paragraph},index));};return/*#__PURE__*/_jsxs(\"div\",{className:\"detail-page\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"detail-page-title\",children:bill.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"bill-info\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"bill-info-title\",children:\"\\uBC95\\uC548 \\uC815\\uBCF4\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"bill-info-detail\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"detail-label\",children:\"\\uBC95\\uC548 \\uBC88\\uD638:\"}),\" \",bill.id]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bill-info-detail\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"detail-label\",children:\"\\uBC95\\uC548 \\uC81C\\uBAA9:\"}),\" \",bill.name]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bill-info-detail\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"detail-label\",children:\"\\uB300\\uD45C \\uBC1C\\uC758\\uC790:\"}),\" \",bill.proposer]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bill-info-detail\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"detail-label\",children:\"\\uBC1C\\uC758\\uC77C:\"}),\" \",bill.date]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bill-summary\",children:[!content&&/*#__PURE__*/_jsx(\"button\",{className:\"summary-button\",onClick:fetchSummary,disabled:isLoading,children:isLoading?'요약 중...':'요약 보기'}),content&&/*#__PURE__*/_jsxs(\"div\",{className:\"summary-content\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"summary-title\",children:\"\\uC694\\uC57D \\uB0B4\\uC6A9\"}),renderContentWithBreaks(content)]})]}),/*#__PURE__*/_jsx(\"div\",{style:{width:\"100%\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"webviewer\",ref:viewer,style:{height:\"100vh\"}})})]});};export default DetailPage;","map":{"version":3,"names":["React","useEffect","useRef","useState","useParams","WebViewer","axios","jsx","_jsx","jsxs","_jsxs","DetailPage","id","idx","parseInt","viewer","bill","setBill","name","proposer","date","content","setContent","fetchBillDetails","response","get","concat","data","TVBPMBILL11","row","BILL_NAME","PROPOSER","PROPOSE_DT","error","console","fetchPdf","rectangleWidth","window","innerWidth","rectangleHeight","innerHeight","path","licenseKey","initialDoc","current","then","instance","documentViewer","annotationManager","Annotations","Core","addEventListener","rectangleAnnot","RectangleAnnotation","PageNumber","X","Y","Width","Height","Author","getCurrentUser","addAnnotation","redrawAnnotation","isLoading","setIsLoading","fetchSummary","post","renderContentWithBreaks","split","map","paragraph","index","className","children","onClick","disabled","style","width","ref","height"],"sources":["/Users/macheewon/Documents/GitHub/aws-winter-yonsei/src/main/frontend/react/src/pages/detail/DetailPage.jsx"],"sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport WebViewer from \"@pdftron/webviewer\";\nimport axios from \"axios\";\nimport '../../css/detailPage.css'\n\nconst DetailPage = () => {\n    const {id} = useParams();\n    const idx = parseInt(id);\n    const viewer = useRef(null);\n\n    const [bill, setBill] = useState({\n        id: idx,\n        name: '',\n        proposer: '',\n        date: ''\n    });\n    const [content, setContent] = useState();\n\n    useEffect(() => {\n        const fetchBillDetails = async () => {\n            try{\n                const response = await axios.get(\n                    `https://open.assembly.go.kr/portal/openapi/TVBPMBILL11?TYPE=json&BILL_NO=${idx}`\n                  );\n                  const data = response.data.TVBPMBILL11[1].row[0];\n                setBill({\n                    ...bill,\n                    name: data.BILL_NAME,\n                    proposer: data.PROPOSER,\n                    date: data.PROPOSE_DT\n                });\n            } catch (error) {\n                console.error('법안 정보를 불러오는 데 실패했습니다.', error);\n            }\n        };\n    \n        const fetchPdf = async() => {\n            try {\n                const rectangleWidth = window.innerWidth * 0.8;\n                const rectangleHeight = window.innerHeight * 0.2;\n                WebViewer(\n                    {\n                        path: \"/webviewer/lib/public\",\n                        licenseKey: \"demo:1707201620106:7f4eafe9030000000069fe03ee7211c47e235a224e21040bb60f132600\",\n                        initialDoc: `http://52.78.206.96:5000/file/${idx}`\n                    },\n                    viewer.current,\n                ).then((instance) => {\n                    const { documentViewer, annotationManager, Annotations } = instance.Core;\n                    documentViewer.addEventListener(\"documentLoaded\", () => {\n                        const rectangleAnnot = new Annotations.RectangleAnnotation({\n                            PageNumber: 1,\n                            X: 0,\n                            Y: 0,\n                            Width: rectangleWidth,\n                            Height: rectangleHeight,\n                            Author: annotationManager.getCurrentUser(),\n                        });\n                        annotationManager.addAnnotation(rectangleAnnot);\n                        annotationManager.redrawAnnotation(rectangleAnnot);\n                    });\n                });\n            } catch (error) {\n                console.error(\"Failed to fetch PDF URL:\", error);\n            }\n    };\n\n        fetchBillDetails();\n        fetchPdf();\n    }, [idx]);\n\n    const [isLoading, setIsLoading] = useState(false);\n    const fetchSummary = async () => {\n        setIsLoading(true);\n        try {\n            const response = await axios.post(`http://localhost:8080/gpt/${idx}/summary`);\n            setContent(response.data);\n\n            setIsLoading(false);\n        } catch (error) {\n            console.error('요약 내용을 불러오는 데 실패했습니다.', error);\n            setIsLoading(false);\n        }\n    };\n\n    const renderContentWithBreaks = (content) => {\n        return content.split(/(?=\\d\\.)/).map((paragraph, index) => (\n            <p key={index} className=\"summary-text\">{paragraph}</p>\n        ));\n    };\n\n        return (\n        <div className=\"detail-page\">\n            <h1 className=\"detail-page-title\">{bill.name}</h1>\n            <div className=\"bill-info\">\n                <h2 className=\"bill-info-title\">법안 정보</h2>\n                <div className=\"bill-info-detail\">\n                    <span className=\"detail-label\">법안 번호:</span> {bill.id}\n                </div>\n                <div className=\"bill-info-detail\">\n                    <span className=\"detail-label\">법안 제목:</span> {bill.name}\n                </div>\n                <div className=\"bill-info-detail\">\n                    <span className=\"detail-label\">대표 발의자:</span> {bill.proposer}\n                </div>\n                <div className=\"bill-info-detail\">\n                    <span className=\"detail-label\">발의일:</span> {bill.date}\n                </div>\n            </div>\n\n            <div className=\"bill-summary\">\n                {!content && (\n                <button className=\"summary-button\" onClick={fetchSummary} disabled={isLoading}>\n                    {isLoading ? '요약 중...' : '요약 보기'}\n                </button>)\n                }\n                {content && (\n                    <div className=\"summary-content\">\n                        <h3 className=\"summary-title\">요약 내용</h3>\n                        {renderContentWithBreaks(content)}\n                    </div>\n                )}\n            </div>\n\n            {/* PDF 뷰어 구성 부분은 여기에 추가 */}\n            <div style={{width: \"100%\"}}>\n                <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\n            </div>\n        </div>\n    );\n};\n\nexport default DetailPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}