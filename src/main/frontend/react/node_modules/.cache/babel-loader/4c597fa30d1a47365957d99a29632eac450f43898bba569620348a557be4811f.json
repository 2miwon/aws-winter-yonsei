{"ast":null,"code":"// AuthContext.js\nimport React,{createContext,useState,useContext,useEffect}from'react';import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";export const AuthContext=/*#__PURE__*/createContext(undefined);export const AuthProvider=_ref=>{let{children}=_ref;const[isLoggedIn,setIsLoggedIn]=useState(false);useEffect(()=>{axios.get('/user/isLogin').then(response=>{// 성공적으로 응답을 받았을 때 실행되는 부분\nconst loginResponse=response.data;if(loginResponse){setIsLoggedIn(true);console.log('사용자는 로그인 상태입니다.');// 로그인 상태에 따른 처리를 추가할 수 있음\n}else{console.log('사용자는 로그인 상태가 아닙니다.');// 로그인 상태에 따른 처리를 추가할 수 있음\n}}).catch(err=>{window.location.href=\"/login\";});},[]);const[sessionUserName,setUserName]=useState(\"\");useEffect(()=>{axios.get('/user/name').then(response=>{// 서버에서 성공적으로 사용자 이름을 가져왔을 때 실행되는 부분\nconst nameResponse=response.data;setUserName(nameResponse);console.log('사용자 이름:',nameResponse);// 가져온 사용자 이름에 대한 처리를 추가할 수 있음\n}).catch(err=>{console.error('사용자 이름을 가져오는 데 실패했습니다.',err);});},[]);return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{isLoggedIn,sessionUserName},children:children});};","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","jsx","_jsx","AuthContext","undefined","AuthProvider","_ref","children","isLoggedIn","setIsLoggedIn","get","then","response","loginResponse","data","console","log","catch","err","window","location","href","sessionUserName","setUserName","nameResponse","error","Provider","value"],"sources":["/Users/macheewon/Documents/GitHub/aws-winter-yonsei/src/main/frontend/react/src/AuthContext.js"],"sourcesContent":["// AuthContext.js\nimport React, {createContext, useState, useContext, useEffect} from 'react';\nimport axios from \"axios\";\n\nexport const AuthContext = createContext(undefined);\n\nexport const AuthProvider = ({ children }) => {\n\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    useEffect(() => {\n        axios.get('/user/isLogin')\n            .then(response => {\n                // 성공적으로 응답을 받았을 때 실행되는 부분\n                const loginResponse = response.data;\n\n                if (loginResponse) {\n                    setIsLoggedIn(true);\n                    console.log('사용자는 로그인 상태입니다.');\n                    // 로그인 상태에 따른 처리를 추가할 수 있음\n                } else {\n                    console.log('사용자는 로그인 상태가 아닙니다.');\n                    // 로그인 상태에 따른 처리를 추가할 수 있음\n                }\n            })\n            .catch((err) => {\n                window.location.href = \"/login\";\n            });\n    }, []);\n\n    const [sessionUserName, setUserName] = useState(\"\");\n    useEffect(() => {\n        axios.get('/user/name')\n            .then(response => {\n                // 서버에서 성공적으로 사용자 이름을 가져왔을 때 실행되는 부분\n                const nameResponse = response.data;\n                setUserName(nameResponse);\n                console.log('사용자 이름:', nameResponse);\n                // 가져온 사용자 이름에 대한 처리를 추가할 수 있음\n            })\n            .catch((err) => {\n                console.error('사용자 이름을 가져오는 데 실패했습니다.', err);\n            });\n    }, []);\n    \n    return (\n        <AuthContext.Provider value={{ isLoggedIn, sessionUserName }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAGC,aAAa,CAAEC,QAAQ,CAAEC,UAAU,CAAEC,SAAS,KAAO,OAAO,CAC3E,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE1B,MAAO,MAAM,CAAAC,WAAW,cAAGP,aAAa,CAACQ,SAAS,CAAC,CAEnD,MAAO,MAAM,CAAAC,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAErC,KAAM,CAACE,UAAU,CAAEC,aAAa,CAAC,CAAGZ,QAAQ,CAAC,KAAK,CAAC,CAEnDE,SAAS,CAAC,IAAM,CACZC,KAAK,CAACU,GAAG,CAAC,eAAe,CAAC,CACrBC,IAAI,CAACC,QAAQ,EAAI,CACd;AACA,KAAM,CAAAC,aAAa,CAAGD,QAAQ,CAACE,IAAI,CAEnC,GAAID,aAAa,CAAE,CACfJ,aAAa,CAAC,IAAI,CAAC,CACnBM,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC,CAC9B;AACJ,CAAC,IAAM,CACHD,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC,CACjC;AACJ,CACJ,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,EAAK,CACZC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAG,QAAQ,CACnC,CAAC,CAAC,CACV,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAACC,eAAe,CAAEC,WAAW,CAAC,CAAG1B,QAAQ,CAAC,EAAE,CAAC,CACnDE,SAAS,CAAC,IAAM,CACZC,KAAK,CAACU,GAAG,CAAC,YAAY,CAAC,CAClBC,IAAI,CAACC,QAAQ,EAAI,CACd;AACA,KAAM,CAAAY,YAAY,CAAGZ,QAAQ,CAACE,IAAI,CAClCS,WAAW,CAACC,YAAY,CAAC,CACzBT,OAAO,CAACC,GAAG,CAAC,SAAS,CAAEQ,YAAY,CAAC,CACpC;AACJ,CAAC,CAAC,CACDP,KAAK,CAAEC,GAAG,EAAK,CACZH,OAAO,CAACU,KAAK,CAAC,wBAAwB,CAAEP,GAAG,CAAC,CAChD,CAAC,CAAC,CACV,CAAC,CAAE,EAAE,CAAC,CAEN,mBACIhB,IAAA,CAACC,WAAW,CAACuB,QAAQ,EAACC,KAAK,CAAE,CAAEnB,UAAU,CAAEc,eAAgB,CAAE,CAAAf,QAAA,CACxDA,QAAQ,EACU,CAE/B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}