{"ast":null,"code":"var _jsxFileName = \"/Users/macheewon/Documents/GitHub/aws-winter-yonsei/src/main/frontend/react/src/chatbot/ChatWindow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport '../css/chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatWindow = _ref => {\n  _s();\n  let {\n    messages,\n    setMessages\n  } = _ref;\n  // 여기에는 메시지를 표시하고 입력을 처리하는 로직을 추가합니다.\n  const handleMessageSubmit = async e => {\n    e.preventDefault();\n    const inputMessage = e.target.message.value.trim();\n    if (inputMessage) {\n      setMessages([...messages, {\n        type: 'user',\n        text: inputMessage\n      }]); // 사용자 메시지 추가\n      e.target.message.value = ''; // 입력 필드 초기화\n\n      const response = await sendMessageToBackend(inputMessage);\n      if (!response.error) {\n        setMessages(messages => [...messages, {\n          type: 'bot',\n          text: response\n        }]); // 백엔드 응답 추가\n      } else {\n        // 오류 메시지 처리\n        setMessages(messages => [...messages, {\n          type: 'bot',\n          text: 'Sorry, there was an error processing your message.'\n        }]);\n      }\n    }\n  };\n  const BACKEND_URL = 'http://localhost:8080/gpt/gen';\n  const sendMessageToBackend = async message => {\n    try {\n      // return {\n      //     error: null,\n      //     message: message + \" checked\"\n      // };\n      const response = await axios.post(BACKEND_URL, {\n        message\n      });\n      return response.data; // 백엔드에서 반환한 응답\n    } catch (error) {\n      console.error('Error sending message:', error);\n      return {\n        error: 'Failed to send message'\n      }; // 오류 처리\n    }\n  };\n\n  const endOfMessagesRef = useRef(null);\n  useEffect(() => {\n    var _endOfMessagesRef$cur;\n    (_endOfMessagesRef$cur = endOfMessagesRef.current) === null || _endOfMessagesRef$cur === void 0 ? void 0 : _endOfMessagesRef$cur.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-title\",\n      children: \"\\uCC44\\uD305\\uBD07\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-content\",\n      children: [\" \", messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-container ${message.type === 'user' ? 'message-user-container' : 'message-bot-container'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.type === 'user' ? 'message-user' : 'message-bot'}`,\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleMessageSubmit,\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"message\",\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatWindow, \"SkUDwHaWXn++Vgd3eLB7BGHpGps=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useEffect","useRef","axios","jsxDEV","_jsxDEV","ChatWindow","_ref","_s","messages","setMessages","handleMessageSubmit","e","preventDefault","inputMessage","target","message","value","trim","type","text","response","sendMessageToBackend","error","BACKEND_URL","post","data","console","endOfMessagesRef","_endOfMessagesRef$cur","current","scrollIntoView","behavior","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onSubmit","name","placeholder","_c","$RefreshReg$"],"sources":["/Users/macheewon/Documents/GitHub/aws-winter-yonsei/src/main/frontend/react/src/chatbot/ChatWindow.jsx"],"sourcesContent":["import React, {useEffect, useRef} from \"react\";\nimport axios from \"axios\";\nimport '../css/chatbot.css';\n\nconst ChatWindow = ({ messages, setMessages }) => {\n    // 여기에는 메시지를 표시하고 입력을 처리하는 로직을 추가합니다.\n    const handleMessageSubmit = async (e) => {\n        e.preventDefault();\n        const inputMessage = e.target.message.value.trim();\n        if (inputMessage) {\n            setMessages([...messages, { type: 'user', text: inputMessage }]); // 사용자 메시지 추가\n            e.target.message.value = ''; // 입력 필드 초기화\n\n            const response = await sendMessageToBackend(inputMessage);\n            if (!response.error) {\n                setMessages(messages => [...messages, { type: 'bot', text: response }]); // 백엔드 응답 추가\n            } else {\n                // 오류 메시지 처리\n                setMessages(messages => [...messages, { type: 'bot', text: 'Sorry, there was an error processing your message.' }]);\n            }\n        }\n    };\n\n    const BACKEND_URL = 'http://localhost:8080/gpt/gen';\n    const sendMessageToBackend = async (message) => {\n        try {\n            // return {\n            //     error: null,\n            //     message: message + \" checked\"\n            // };\n            const response = await axios.post(BACKEND_URL, { message });\n            return response.data; // 백엔드에서 반환한 응답\n        } catch (error) {\n            console.error('Error sending message:', error);\n            return { error: 'Failed to send message' }; // 오류 처리\n        }\n    };\n    const endOfMessagesRef = useRef(null);\n\n    useEffect(() => {\n        endOfMessagesRef.current?.scrollIntoView({ behavior: 'smooth' });\n    }, [messages]);\n\n    return (\n        <div className=\"chat-window\">\n            <div className=\"chat-title\">채팅봇</div>\n            <div className=\"chat-content\"> {/* 채팅 내용을 위한 컨테이너 추가 */}\n                {messages.map((message, index) => (\n                    <div\n                        key={index}\n                        className={`message-container ${message.type === 'user' ? 'message-user-container' : 'message-bot-container'}`}\n                    >\n                        <div className={`message ${message.type === 'user' ? 'message-user' : 'message-bot'}`}>\n                            {message.text}\n                        </div>\n                    </div>\n                ))}\n            </div>\n            <form onSubmit={handleMessageSubmit} className=\"chat-input\">\n                <input\n                    type=\"text\"\n                    name=\"message\"\n                    placeholder=\"Type a message...\"\n                />\n                <button type=\"submit\">Send</button>\n            </form>\n        </div>\n\n    );\n\n};\n\nexport default ChatWindow;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}