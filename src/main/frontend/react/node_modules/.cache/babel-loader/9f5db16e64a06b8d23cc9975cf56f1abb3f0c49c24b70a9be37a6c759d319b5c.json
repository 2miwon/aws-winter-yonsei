{"ast":null,"code":"var _jsxFileName = \"/Users/macheewon/Documents/GitHub/aws-winter-yonsei/src/main/frontend/react/src/AuthContext.js\",\n  _s = $RefreshSig$();\n// AuthContext.js\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    axios.get('/user/isLogin').then(response => {\n      // 성공적으로 응답을 받았을 때 실행되는 부분\n      const loginResponse = response.data;\n      if (loginResponse) {\n        setIsLoggedIn(true);\n        console.log('사용자는 로그인 상태입니다.');\n        // 로그인 상태에 따른 처리를 추가할 수 있음\n      } else {\n        console.log('사용자는 로그인 상태가 아닙니다.');\n        // 로그인 상태에 따른 처리를 추가할 수 있음\n      }\n    }).catch(err => {\n      window.location.href = \"/login\";\n    });\n  }, []);\n  const [sessionUserName, setUserName] = useState(\"\");\n  useEffect(() => {\n    axios.get('/user/name').then(response => {\n      // 서버에서 성공적으로 사용자 이름을 가져왔을 때 실행되는 부분\n      const nameResponse = response.data;\n      setUserName(nameResponse);\n      console.log('사용자 이름:', nameResponse);\n      // 가져온 사용자 이름에 대한 처리를 추가할 수 있음\n    }).catch(err => {\n      console.error('사용자 이름을 가져오는 데 실패했습니다.', err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      sessionUserName\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"MrU6mnsRpIW3zdV6awE4re14jDU=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","_ref","_s","children","isLoggedIn","setIsLoggedIn","get","then","response","loginResponse","data","console","log","catch","err","window","location","href","sessionUserName","setUserName","nameResponse","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/macheewon/Documents/GitHub/aws-winter-yonsei/src/main/frontend/react/src/AuthContext.js"],"sourcesContent":["// AuthContext.js\nimport React, {createContext, useState, useContext, useEffect} from 'react';\nimport axios from \"axios\";\n\nexport const AuthContext = createContext(undefined);\n\nexport const AuthProvider = ({ children }) => {\n\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    useEffect(() => {\n        axios.get('/user/isLogin')\n            .then(response => {\n                // 성공적으로 응답을 받았을 때 실행되는 부분\n                const loginResponse = response.data;\n\n                if (loginResponse) {\n                    setIsLoggedIn(true);\n                    console.log('사용자는 로그인 상태입니다.');\n                    // 로그인 상태에 따른 처리를 추가할 수 있음\n                } else {\n                    console.log('사용자는 로그인 상태가 아닙니다.');\n                    // 로그인 상태에 따른 처리를 추가할 수 있음\n                }\n            })\n            .catch((err) => {\n                window.location.href = \"/login\";\n            });\n    }, []);\n\n    const [sessionUserName, setUserName] = useState(\"\");\n    useEffect(() => {\n        axios.get('/user/name')\n            .then(response => {\n                // 서버에서 성공적으로 사용자 이름을 가져왔을 때 실행되는 부분\n                const nameResponse = response.data;\n                setUserName(nameResponse);\n                console.log('사용자 이름:', nameResponse);\n                // 가져온 사용자 이름에 대한 처리를 추가할 수 있음\n            })\n            .catch((err) => {\n                console.error('사용자 이름을 가져오는 데 실패했습니다.', err);\n            });\n    }, []);\n    \n    return (\n        <AuthContext.Provider value={{ isLoggedIn, sessionUserName }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAGC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAO,OAAO;AAC3E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAACQ,SAAS,CAAC;AAEnD,OAAO,MAAMC,YAAY,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAErC,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEnDE,SAAS,CAAC,MAAM;IACZC,KAAK,CAACW,GAAG,CAAC,eAAe,CAAC,CACrBC,IAAI,CAACC,QAAQ,IAAI;MACd;MACA,MAAMC,aAAa,GAAGD,QAAQ,CAACE,IAAI;MAEnC,IAAID,aAAa,EAAE;QACfJ,aAAa,CAAC,IAAI,CAAC;QACnBM,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;QAC9B;MACJ,CAAC,MAAM;QACHD,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;QACjC;MACJ;IACJ,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;MACZC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;IACnC,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM,CAACC,eAAe,EAAEC,WAAW,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACnDE,SAAS,CAAC,MAAM;IACZC,KAAK,CAACW,GAAG,CAAC,YAAY,CAAC,CAClBC,IAAI,CAACC,QAAQ,IAAI;MACd;MACA,MAAMY,YAAY,GAAGZ,QAAQ,CAACE,IAAI;MAClCS,WAAW,CAACC,YAAY,CAAC;MACzBT,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEQ,YAAY,CAAC;MACpC;IACJ,CAAC,CAAC,CACDP,KAAK,CAAEC,GAAG,IAAK;MACZH,OAAO,CAACU,KAAK,CAAC,wBAAwB,EAAEP,GAAG,CAAC;IAChD,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIjB,OAAA,CAACC,WAAW,CAACwB,QAAQ;IAACC,KAAK,EAAE;MAAEnB,UAAU;MAAEc;IAAgB,CAAE;IAAAf,QAAA,EACxDA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACU;AAE/B,CAAC;AAACzB,EAAA,CA5CWF,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}