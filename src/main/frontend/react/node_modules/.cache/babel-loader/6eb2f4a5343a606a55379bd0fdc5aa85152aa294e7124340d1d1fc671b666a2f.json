{"ast":null,"code":"import React,{useEffect,useState,useRef,useCallback}from'react';import{Navigate,Routes,Route,useLocation}from'react-router-dom';import URL from'constants/url';import CODE from'constants/code';//COMMON\nimport EgovHeader from'components/EgovHeader';import EgovFooter from'components/EgovFooter';import EgovError from'components/EgovError';import EgovMain from'pages/main/EgovMain';import EgovLogin from'pages/login/EgovLogin';import*as EgovNet from'api/egovFetch';// jwt토큰 위조 검사 때문에 추가\nimport initPage from'js/ui';import DetailPage from\"pages/detail/DetailPage\";import UserInfo from\"../pages/user/userInfo\";import SearchResult from\"../pages/search/SearchResult\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const RootRoutes=()=>{//useLocation객체를 이용하여 정규표현식을 사용한 /admin/~ 으로 시작하는 경로와 비교에 사용(아래 1줄) */}\nconst location=useLocation();//리액트에서 사이트관리자에 접근하는 토큰값 위변조 방지용으로 서버에서 비교하는 함수 추가\nconst jwtAuthentication=useCallback(()=>{console.group(\"jwtAuthentication\");console.log(\"[Start] jwtAuthentication ------------------------------\");const jwtAuthURL=\"/jwtAuthAPI\";let requestOptions={method:\"POST\"};EgovNet.requestFetch(jwtAuthURL,requestOptions,resp=>{if(resp===false){setMounted(false);}else{setMounted(true);// 이 값으로 true 일 때만 페이지를 렌더링이 되는 변수 사용.\n}});},[]);//시스템관리 메뉴인 /admin/으로 시작하는 URL은 모두 로그인이 필요하도록 코드추가(아래)\nconst isMounted=useRef(false);// 아래 로그인 이동 부분이 2번 실행되지 않도록 즉, 마운트 될 때만 실행되도록 변수 생성\nconst[mounted,setMounted]=useState(false);// 컴포넌트 최초 마운트 후 리렌더링 전 로그인 페이지로 이동하는 조건으로 사용\nuseEffect(()=>{if(!isMounted.current){// 컴포넌트 최초 마운트 시 페이지 진입 전(렌더링 전) 실행\nisMounted.current=true;// 이 값으로 true 일 때만 페이지를 렌더링이 되는 변수 사용.\nsetMounted(true);// 이 값으로 true 일 때만 페이지를 렌더링이 되는 변수 사용.\nconst regex=/^(\\/admin\\/)+(.)*$/;//정규표현식 사용: /admin/~ 으로 시작하는 경로 모두 포함\nif(regex.test(location.pathname)){setMounted(false);// 이 값으로 true 일 때만 페이지를 렌더링이 되는 변수 사용. 기본은 숨기기\njwtAuthentication();// 이 함수에서 관리자단 인증여부 확인 후 렌더링 처리\n}}},[jwtAuthentication,location,mounted]);// location 경로와 페이지 마운트상태가 변경 될 때 업데이트 후 리렌더링\nif(mounted){// 인증 없이 시스템관리 URL로 접근할 때 렌더링 되는 것을 방지하는 조건추가. \nreturn/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:URL.ERROR,element:/*#__PURE__*/_jsx(EgovError,{})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(SecondRoutes,{})})]});}};const SecondRoutes=()=>{// eslint-disable-next-line no-unused-vars\nconst[,setLoginVO]=useState({});//useRef객체를 사용하여 페이지 마운트 된 후 ui.js를 로딩 하도록 변경 코드 추가(아래)\nconst isMounted=useRef(false);// 아래 로그인 이동 부분이 2번 실행되지 않도록 즉, 마운트 될 때만 실행되도록 변수 생성\nuseEffect(()=>{if(!isMounted.current){// 컴포넌트 최초 마운트 시 페이지 진입 전(렌더링 전) 실행\nisMounted.current=true;// 이 값으로 true 일 때만 페이지를 렌더링이 되는 변수 사용.\n}else{initPage();}},[]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(EgovHeader,{}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:URL.MAIN,element:/*#__PURE__*/_jsx(EgovMain,{})}),/*#__PURE__*/_jsx(Route,{path:URL.LOGIN,element:/*#__PURE__*/_jsx(EgovLogin,{onChangeLogin:user=>setLoginVO(user)})}),/*#__PURE__*/_jsx(Route,{path:URL.USERINFO,element:/*#__PURE__*/_jsx(UserInfo,{})}),/*#__PURE__*/_jsx(Route,{path:\"/searchResult\",element:/*#__PURE__*/_jsx(SearchResult,{})}),/*#__PURE__*/_jsx(Route,{path:URL.ERROR,element:/*#__PURE__*/_jsx(EgovError,{})}),/*#__PURE__*/_jsx(Route,{path:\"/DetailPage/:id\",element:/*#__PURE__*/_jsx(DetailPage,{})})]}),/*#__PURE__*/_jsx(EgovFooter,{})]});};export default RootRoutes;","map":{"version":3,"names":["React","useEffect","useState","useRef","useCallback","Navigate","Routes","Route","useLocation","URL","CODE","EgovHeader","EgovFooter","EgovError","EgovMain","EgovLogin","EgovNet","initPage","DetailPage","UserInfo","SearchResult","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","RootRoutes","location","jwtAuthentication","console","group","log","jwtAuthURL","requestOptions","method","requestFetch","resp","setMounted","isMounted","mounted","current","regex","test","pathname","children","path","ERROR","element","SecondRoutes","setLoginVO","MAIN","LOGIN","onChangeLogin","user","USERINFO"],"sources":["/Users/macheewon/Documents/GitHub/aws-winter-yonsei/src/main/frontend/react/src/routes/index.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef, useCallback } from 'react';\nimport { Navigate, Routes, Route, useLocation } from 'react-router-dom';\n\nimport URL from 'constants/url';\nimport CODE from 'constants/code';\n\n//COMMON\nimport EgovHeader from 'components/EgovHeader';\nimport EgovFooter from 'components/EgovFooter';\nimport EgovError from 'components/EgovError';\n\nimport EgovMain from 'pages/main/EgovMain';\nimport EgovLogin from 'pages/login/EgovLogin';\n\nimport * as EgovNet from 'api/egovFetch'; // jwt토큰 위조 검사 때문에 추가\nimport initPage from 'js/ui';\nimport DetailPage from \"pages/detail/DetailPage\";\nimport UserInfo from \"../pages/user/userInfo\";\nimport SearchResult from \"../pages/search/SearchResult\";\n\nconst RootRoutes = () => {\n  //useLocation객체를 이용하여 정규표현식을 사용한 /admin/~ 으로 시작하는 경로와 비교에 사용(아래 1줄) */}\n  const location = useLocation();\n\n  //리액트에서 사이트관리자에 접근하는 토큰값 위변조 방지용으로 서버에서 비교하는 함수 추가\n  const jwtAuthentication = useCallback(() => {\n    console.group(\"jwtAuthentication\");\n    console.log(\"[Start] jwtAuthentication ------------------------------\");\n\n    const jwtAuthURL = \"/jwtAuthAPI\";\n    let requestOptions = {\n      method: \"POST\",\n    };\n\n    EgovNet.requestFetch(jwtAuthURL, requestOptions, (resp) => {\n      if (resp === false) {\n        setMounted(false);\n      } else {\n        setMounted(true); // 이 값으로 true 일 때만 페이지를 렌더링이 되는 변수 사용.\n      }\n    });\n\n  }, []);\n\n  //시스템관리 메뉴인 /admin/으로 시작하는 URL은 모두 로그인이 필요하도록 코드추가(아래)\n  const isMounted = useRef(false); // 아래 로그인 이동 부분이 2번 실행되지 않도록 즉, 마운트 될 때만 실행되도록 변수 생성\n  const [mounted, setMounted] = useState(false);// 컴포넌트 최초 마운트 후 리렌더링 전 로그인 페이지로 이동하는 조건으로 사용\n\n  useEffect(() => {\n\tif (!isMounted.current) { // 컴포넌트 최초 마운트 시 페이지 진입 전(렌더링 전) 실행\n\t\tisMounted.current = true; // 이 값으로 true 일 때만 페이지를 렌더링이 되는 변수 사용.\n\t\tsetMounted(true); // 이 값으로 true 일 때만 페이지를 렌더링이 되는 변수 사용.\n\t\tconst regex = /^(\\/admin\\/)+(.)*$/; //정규표현식 사용: /admin/~ 으로 시작하는 경로 모두 포함\n\t\tif(regex.test(location.pathname)) {\n\t\t\tsetMounted(false); // 이 값으로 true 일 때만 페이지를 렌더링이 되는 변수 사용. 기본은 숨기기\n\t\t\tjwtAuthentication(); // 이 함수에서 관리자단 인증여부 확인 후 렌더링 처리\n\t\t}\n\t}\n  },[jwtAuthentication, location, mounted]); // location 경로와 페이지 마운트상태가 변경 될 때 업데이트 후 리렌더링\n\n  if(mounted) { // 인증 없이 시스템관리 URL로 접근할 때 렌더링 되는 것을 방지하는 조건추가. \n\t  return (\n\t      <Routes>\n\t        <Route path={URL.ERROR} element={<EgovError />} />\n\t        <Route path=\"*\" element={<SecondRoutes/>} />\n\t      </Routes>\n\t  )\n  }\n}\n\nconst SecondRoutes = () => {\n  // eslint-disable-next-line no-unused-vars\n  const [, setLoginVO] = useState({});\n\n  //useRef객체를 사용하여 페이지 마운트 된 후 ui.js를 로딩 하도록 변경 코드 추가(아래)\n  const isMounted = useRef(false); // 아래 로그인 이동 부분이 2번 실행되지 않도록 즉, 마운트 될 때만 실행되도록 변수 생성\n  useEffect(() => {\n    if (!isMounted.current) { // 컴포넌트 최초 마운트 시 페이지 진입 전(렌더링 전) 실행\n\t\tisMounted.current = true; // 이 값으로 true 일 때만 페이지를 렌더링이 되는 변수 사용.\n\t}else{\n\t\tinitPage();\n\t}\n  },[]);\n  \n  return (\n    <>\n      <EgovHeader />\n      <Routes>\n        {/* MAIN */}\n        <Route path={URL.MAIN} element={<EgovMain />} />\n\n        {/* LOGIN */}\n        <Route path={URL.LOGIN} element={<EgovLogin\n                onChangeLogin={(user) => setLoginVO(user)}\n              />}/>\n          <Route path={URL.USERINFO} element={<UserInfo/>}/>\n          <Route path=\"/searchResult\" element={<SearchResult/>} />\n\n        {/* ERROR */}\n        <Route path={URL.ERROR} element={<EgovError />} />\n\n        <Route path=\"/DetailPage/:id\" element={<DetailPage />} />\n\n      </Routes>\n      <EgovFooter />      \n    </>\n  )\n  \n}\n\n\nexport default RootRoutes;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}